var tipuesearch = {"pages": [{'title': 'About', 'text': '課程名稱: 協同產品設計實習 - Collaborative Product Design Practice \n 學員(本人)作業網站:\xa0 https://mdecd2025.github.io/hw-kim41223114/content/index.html \n 學員(本人)作業倉儲:\xa0 https://github.com/mdecd2025/hw-kim41223114 \n', 'tags': '', 'url': 'About.html'}, {'title': 'List', 'text': '其他學員作業網站(41223116): \n \n 其他學員作業網站(41223113): \n \n 其他學員作業倉儲(41223116): \n \n 團隊倉儲連結: https://github.com/orgs/mdecd2025/teams/ag2 \n 團隊網頁連結: https://mdecd2025.github.io/2a-ag2/content/index.html \n \n 課程代號: cd2025 \n Teams 線上教學: \n 以 "學號@nfu.edu.tw" 登入 \xa0 https://login.microsoftonline.com/ \xa0 Office 365 \n Teams 團隊代碼:\xa0 p5z4eku \n \n 課程評分: \n Homework (30%) - 每週至少提交兩次與課程進度有關的內容, 完成後填回自評表單 \n Exam (40%) - 建立包含操作流程影片、心得以及提供檔案下載的網頁後填回自評表單 \n Final Report (30%) - 利用網頁內容進行簡報並提交 pdf 格式書面報告, 完成後填回自評表單 \n \n', 'tags': '', 'url': 'List.html'}, {'title': 'W1(task1)', 'text': '已完成.bat之python更新 \n \n', 'tags': '', 'url': 'W1(task1).html'}, {'title': 'W3(task2)', 'text': '本組學員之列表已完成，請見本組網站: https://mdecd2025.github.io/2a-ag2/content/index.html \n \n', 'tags': '', 'url': 'W3(task2).html'}, {'title': 'W4', 'text': '今天上課期間製作了以下ssh建立，以嘗試使用ipv6開啟小組網頁(雖然最後沒有成功，但已經可以使用git clone) \n \n \n 以下是已成功使用putty建立的public key \n \n 心得:雖然之前老師有教過如何用putty來建立ssh，但經過這次上課後更理解其意義及全部建立之原因，發現ipv6、putty兩者是缺一不可的。 \n \n 此外，還需要將init.py檔案中的ipv6位置換成自己的才算是完成。 \n \n 更新: \n \xa0 \xa0 \xa0 \xa0 今天是w14 2025/5/23 我成功連線近端，分別是團隊作業網站跟個人作業網站，以下是程式截圖跟影片 \n 1.近端連結團隊作業網站過程 \n \n \n \n \n \n 2.近端連接個人作業網站過程 \n \n \n', 'tags': '', 'url': 'W4.html'}, {'title': 'W5(task5)', 'text': '一、打開webots \n \xa0 \xa0 \xa0以下是開啟成功之畫面(boomer) \n \xa0 \xa0 \xa0 \n 有嘗試開啟範例檔案，但其馬上閃退，要再了解其原因。 \n \n 二、task5第六項(本人負責之部分) \n \xa0 \xa0 \xa0\xa0 \n 在 Webots 中利用 圖形介面 (menu) 建立 四連桿機構 (four-bar linkage) 場景的步驟如下： \n \n 建立新的 Webots 世界 開啟 Webots，點選 File > New World，建立一個新的場景。 儲存 新的世界 (.wbt 檔案)。 2. 添加環境 在 Scene Tree (場景樹) 視窗中，右鍵 WorldInfo，選擇 Add > Solid 來建立地面或其他環境元件。 若需要平面地板，選擇 Add > Shape > Plane，並設定合適的尺寸。 3. 建立四連桿機構 (1) 新增連桿 (Links) 每個連桿都是 Solid 元件，可從 Add > Solid > Shape > Box/Cylinder 新增。 設定： 尺寸 (Size) 質量 (Mass) 位置 (Translation) (2) 新增鉸鏈關節 (Revolute Joint) 在 Scene Tree 視窗，為每個關節選擇 Add > Joint > RevoluteJoint。 關鍵設定 Anchor (樞軸點位置)： 設定連桿之間的旋轉中心。 Joint Parameters： 可設定旋轉角度範圍 (minPosition, maxPosition) 或馬達 (motor)。 EndPoint： 設定此關節連接的目標連桿。 (3) 組合完整機構 確保所有連桿與關節的層級結構正確，例如： markdown 複製 編輯 - Base (固定底座)  - RevoluteJoint1  - Link1  - RevoluteJoint2  - Link2  - RevoluteJoint3  - Link3  - RevoluteJoint4  - Link4 4. 設定模擬參數 Gravity (重力)：確認四連桿能正常運動，可在 WorldInfo > gravity 中調整。 Physics (物理屬性)： 每個連桿應啟用 Physics 屬性，以確保物理模擬生效。 調整 density (密度) 或 mass (質量) 來優化運動表現。 5. 測試與調整 運行模擬 (Run 按鈕) 確保機構正常運作。 如有異常： 確認 關節 (RevoluteJoint) 的 anchor 位置是否正確。 檢查碰撞 是否影響運動。 若有馬達，確認 PID 參數 是否適當。 6. 進階功能 (可選) 控制馬達：在 RevoluteJoint > motor 啟用馬達，並設置 velocity (角速度) 及 torque (扭矩)。 加入腳本控制：透過 Robot 控制器 (Controller) 以 Python / C / C++ 控制四連桿運動。 動畫與視覺效果：可調整光源、材質與視角，使場景更具可視化效果。 注意事項 正確設置 RevoluteJoint 的 anchor，確保關節轉動中心對齊。 連桿長度與關節位置對應，避免不符合機構運動規則的設計。 調整物理屬性 (mass, inertia) 以確保運動穩定。 避免連桿互相碰撞，可在 boundingObject 設定適當形狀，或啟用 contactMaterial 屬性調整摩擦力。 測試不同參數 (如摩擦、重力) 以觀察影響。 \n \n', 'tags': '', 'url': 'W5(task5).html'}, {'title': 'W6(HW2、task3)', 'text': '已找出原因了，要使用可攜開啟webots才不會閃退。圖片如下: \n \n \n 目前尚不知如何用webots讓他跑起來，但用solvespace是可以的: \n \n 至少有先嘗試繪製出零件了(task3) \n \n \n 接著是我用webots開啟新project做出的小球(未上色): \n 原來上色要自己添加XD \n \n', 'tags': '', 'url': 'W6(HW2、task3).html'}, {'title': 'W8(HW1)', 'text': '以下是four bar在webots的開啟: \n \n 這玩意不曉得怎麼被我拆了XD \n \n 至少我成功開檔案了。 \n', 'tags': '', 'url': 'W8(HW1).html'}, {'title': 'W9', 'text': '使用7段顯示器變換顯示顏色: \n \n 呼叫七段顯示器進入webots (想測試這個檔案的功能，但目前沒測試出來) \n \n', 'tags': '', 'url': 'W9.html'}, {'title': 'Homework', 'text': '作業 (30%) \n HW1 (5%):  建立由 Box 組成的平面四連桿機構 Webots 模擬場景 \n part1: \n 請各學員在 USB 隨身碟或個人電腦上完成 cd2025 課程所需的可攜系統配置: \n 下載  portable_wcm2025.7z  (330MB, 解開壓縮後 1.4GB) \n Webots_2025a.7z  (1.5 GB, 解開後約為 2.9GB, 可單獨運作) \n Webots_2025a_web.7z  (171 MB, 解開壓縮後約為 1GB, 必須連網運作) \n Blender4.2.7z \n part2: \n 請各學員完成可攜程式系統配置後, 利用 Webots R2025a 中寬度與高度都為 0.1m 的 box 物件建立一個簡單的平面四連桿機構模擬場景. \n base (基座) 長度 1m, link1 長度 0.4m, link2 長度 0.6m, link3 長度 0.9m, 各轉軸均為 HingeJoint, joint1 旋轉速度設定為 1radian/sec. \n part3: \n 模擬場景啟動後, 按下 s 鍵機構開始作動, 按下 p 鍵後機構暫停. \n 參考資料: \n cd2025_hw1_demo.7z \n HW2 (5%):  建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景 \n \n 各學員請利用 CAD 系統依據 HW1 的連桿尺寸與運動方式, 配置適當大小的旋轉軸以及基座後, 利用 Webots R2025a 完成一個簡單的平面四連桿機構模擬場景. \n 參考資料: \n fourbar_slvs.7z \n \n HW3 (20%): 建立 Webots 桌上籃球遊戲機模擬系統 \n 請各分組利用CAD 系統建立一個能在電腦桌 (1600W X 700D X 740H mm) 上運作的投籃機構 ( 參考影片 )後, 導入 Webots R2025a 套件, 建立一個能由使用者透過鍵盤按鍵操作, 且具備計分板的籃球遊戲機模擬系統. \n 參考資料: \n 參考資料: \n fourbar_ball_throwing_linkage.slvs \n sixbar_ball_throwing_linkage.slvs \n \n', 'tags': '', 'url': 'Homework.html'}, {'title': 'HW1', 'text': 'HW1 (5%):  建立由 Box 組成的平面四連桿機構 Webots 模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW1 - 學員學號 \n 以下是四連桿機構之程式結構介紹: \n 檔案: /downloads/fourbar_box_w8-41223114.zip \n \n 相關提問: \n \n 在製作 HW1 之前是否實際練習 Tutorial1 與 Tutorial2?A:是 \n Webots 是什麼樣的軟體？它主要用途為何？A: 用於各種機器人應用，包括輪式機器人、工業手臂、飛行無人機、水下機器人、多足機器人、自動駕駛車輛等 。目前在課程中，主要用於機械結構運動模擬。 \n 在 Tutorial1 中，學習者需要操作的主要機器人模型名稱是什麼？A:Robot \n 如何在 Webots 中建立並執行一個新的模擬世界（world）？A:\n 建立新專案 ：在頂部選單中選擇 \xa0 Wizards （或「嚮導」）→ \xa0 New Project Directory （「新專案目錄」），依照指示輸入專案名稱與儲存路徑。 \n 建立新世界 ：在專案目錄下，自動會建立一個名為 \xa0 worlds \xa0 的資料夾，並生成一個新的 \xa0 .wbt \xa0 檔案，這就是你的模擬世界檔案。 \n \n 請說明如何讓機器人在模擬中移動，並指出相關的程式控制方式。A: \n Tutorial1 中，學習者需要修改哪些參數或檔案來控制機器人的行為？A:1.電機時間步長 2.電機目標位置\xa0 \n 請簡述 Webots 控制器（controller）的功能及其與機器人的關係。A:為robot中的device提供控制程式來控制機構旋轉及作動的控制。 \n 在 Tutorial2 中，機器人需要完成什麼樣的任務或行為？A: 創建一個與環境互動的球。我們將處理與節點相關的幾個概念：它們的含義是什麼，如何創建它們，它們如何必須隸屬等等。此外，我們還將看到如何設置物理效果。 \n Webots 中的 "Supervisor" 是什麼？它與一般機器人控制器有何不同？A: Supervisor 是一種具備模擬世界全域權限的特殊控制器，與一般機器人控制器相比，它能夠進行更高層次的實驗管理與環境控制，適合用於複雜模擬實驗、自動化測試和數據收集 。 \n 請說明如何在 Webots 中進行感測器數據的讀取與應用（例如距離感測器、攝影機）。\xa0A:\n \n \n 距離感測器 ：用於即時測量與障礙物的距離，常用於避障與環境偵測。 \n \n \n 攝影機 ：用於擷取影像並進行影像處理或物件辨識，適合複雜環境監控與自動化任務。 \n \n \n 這些感測器數據可直接應用於機器人控制，實現自主導航、環境感知與智慧應用。 \n \n 若要延伸 Tutorial2 讓機器人具備自主避障能力，你會怎麼設計與實作？A: 優先使用反應式控制確保即時避障，再疊加規劃層實現高效導航。測試時應逐步增加環境複雜度，從空曠場地到多障礙迷宮，最後加入動態物體驗證 。 \n 請說明 Webots 中「時間步長（timestep）」的意義，以及它對模擬的影響。A: 時間步長是 Webots 模擬的核心參數，影響著模擬的精確度、速度與穩定性。設定時需根據模擬需求與硬體效能，在精確度與速度之間取得平衡 。 \n 如何在 Webots 中為機器人新增感測器？請說明基本步驟。A: 新增感測器的步驟包括在場景樹中新增感測器節點、調整位置與方向、儲存並測試，最後在控制器程式中啟用與讀取感測器數據。這些步驟適用於大多數標準感測器，如距離感測器、攝影機等 。 \n 請說明如何將 Webots 控制器程式從 Python 改為 C 語言，並指出相關設定。A:\n (1)在 Webots 選單中選擇 \xa0 Wizards \xa0 → \xa0 New Robot Controller \n (2)選擇語言為 \xa0 C \n (3)命名控制器（例如 \xa0 my_controller ） \n (4)勾選 \xa0 Open controller in text editor \xa0 後點擊 \xa0 Done \n \n Tutorial1、2 中，若控制器程式有語法錯誤時，Webots 會如何反應？學員該如何排除？A:\xa0\n \n \n 檢查主控台訊息 ：Webots 會將所有錯誤訊息（包括標準輸出與錯誤）導向主控台，方便學員進行除錯 2 3 。 \n \n \n 檔案位置與命名 ：確保控制器檔案位於專案目錄的 \xa0 controllers \xa0 資料夾下，且目錄與檔案命名正確 1 。 \n \n \n 逐步修正 ：先修正第一個錯誤，再逐步檢查後續問題，避免一次性修正多處錯誤導致混淆。 \n \n \n \n 如何將 Webots 世界（world）或機器人設定檔分享給他人，確保對方可順利開啟模擬？A: 只要按照標準檔案結構打包專案、確認所有依賴資產與控制器皆在目錄內，並附上簡要說明，即可順利分享 Webots 世界或機器人設定檔，讓對方開啟模擬時不會遇到檔案遺漏或路徑錯誤 。 \n 如果想讓機器人在模擬時產生聲音或播放音樂，Webots 提供哪些方法？A:\n 新增 Speaker 節點 ：在機器人或環境物件的 \xa0 children \xa0 子節點下新增 \xa0 Speaker \xa0 節點。 \n 設定名稱與位置 ：設定 \xa0 name \xa0 屬性（如 \xa0 "speaker" ）與 \xa0 translation \xa0 屬性，以決定聲音來源位置。 \n 選擇聲音檔 ：可於 \xa0 Speaker \xa0 節點設定播放的 \xa0 .wav \xa0 檔，或直接透過控制器程式指定播放內容 1 2 。 \n \n 請說明如何在 Webots 中同時操作多個機器人，並讓它們各自執行不同控制器。A:\n \n \n \n \n \n \n \n 透過正確設定場景樹名稱、啟動參數和動態識別機制，Webots 可同時運行多個獨立控制的機器人。關鍵在於： \n \n \n 確保每個機器人有唯一名稱和 \xa0 <extern> \xa0 控制器 \n \n \n 啟動控制器時明確指定 \xa0 --robot-name \n \n \n 在程式碼中根據名稱分支執行不同邏輯 \n \n \n 資源使用需隔離（檔案、網路埠等） \n \n \n 此方法適用於學術研究（如多機器人協作）和工業測試（如自動化產線模擬）。 \n \n \n \n \n \n \n \n \n 在 Webots 控制器中，如何獲得機器人的當前座標位置與朝向？A:\n \n \n 一般控制器 ：需安裝 GPS 與 Compass 節點，透過感測器讀取位置與朝向。 \n \n \n Supervisor 控制器 ：可直接存取場景樹欄位，無需額外感測器，即可取得精確座標與朝向。 \n \n \n 這種設計讓一般控制器更貼近真實機器人（需依賴感測器），而 Supervisor 則可用於實驗監控與自動化測試。 \n \n 請說明 Webots 控制器中感測器資料的單位（例如距離感測器、加速度計），以及如何正確解讀。A:\n \n \n \n 感測器類型 \n 回傳值單位 \n 解讀方式與注意事項 \n \n \n \n \n 距離感測器 \n 感測器原始輸出 \n 需用 lookupTable 轉換為實際距離（公尺） \n \n \n 加速度計 \n 公尺每平方秒（m/s²） \n 三軸加速度，含重力分量 \n \n \n \n \n 如果想要錄製 Webots 模擬畫面並輸出成影片檔，該如何操作？A: ShareX.exe \n Webots 中的 PROTO 文件有什麼作用？與 world 檔（.wbt）的關係為何？A:\n \n \n \n 特性 \n PROTO 文件 \n World 文件（.wbt） \n \n \n \n \n 角色 \n 定义可重用组件（如机器人模型） \n 描述整个模拟场景（包含实例化的 PROTO） \n \n \n 语法结构 \n 包含 \xa0 PROTO \xa0 声明、字段定义和节点主体 \n 包含 \xa0 WorldInfo 、 Viewpoint \xa0 和实例化节点 \n \n \n 实例化方式 \n 在 world 文件中通过名称和字段参数实例化： MyRobot { translation 0 1 0 } \n 直接包含场景根节点和实例化对象 \n \n \n 依赖关系 \n 可嵌套引用其他 PROTO（需声明 \xa0 EXTERNPROTO ） \n 依赖 PROTO 文件定义组件 \n \n \n \n \n 請說明如何在 Webots 中設定機器人的初始位置和方向。A:\n \n \n 場景樹設定 ：適用於模擬初始設定，操作簡單直觀。 \n \n \n Supervisor 控制器設定 ：適用於程式化、動態調整機器人初始位置與方向。 \n \n \n 這兩種方式可依需求靈活選擇。 \n \n 在 Tutorial1 或 Tutorial2 中，如何讓機器人執行預設外的自訂動作？A: 讓機器人執行預設外的自訂動作，關鍵在於編寫自訂控制器程式，並根據機器人結構與需求設計動作邏輯。Webots 支援多種語言（如 Python、C、C++、Java 等），並提供豐富的 API 控制馬達、感測器與其他設備，讓你能靈活實現各種自訂動作 。 \n Webots 支援哪些主流程控制語言？各有何優缺點？A:\n \n \n \n 語言 \n 說明與特點 \n 優點 \n 缺點 \n \n \n \n \n C/C++ \n 編譯型語言，執行效率高，Webots 核心 API 以 C 實現 \n 執行速度快、資源消耗低、適合複雜與即時控制、API 最完整 \n 開發門檻較高、記憶體需自行管理、跨平台需額外編譯環境 \n \n \n Java \n 編譯型語言，運行於 JVM \n 跨平台、易於維護、垃圾回收機制、適合大型專案 \n 執行速度略慢於 C/C++、需安裝 JRE/JDK \n \n \n Python \n 直譯型語言，語法簡潔易上手 \n 開發速度快、易於除錯、適合原型設計與教學 \n 執行速度較慢、不適合計算密集型任務 \n \n \n MATLAB \n 數學運算與模擬常用，需安裝 MATLAB \n 數學運算強大、適合演算法開發與數據分析 \n 需授權、執行速度慢、僅限於 MATLAB 環境 \n \n \n \n \n 機器人控制器程式如何與其他程式（如資料記錄、遠端伺服器）進行通訊？A:\n \n \n \n \n \n \n \n Webots 控制器程式與其他程式通訊的原理，主要是透過進程分離與網路協定，讓控制器能與外部程式（如資料記錄、遠端伺服器）進行資料交換。常見方式包括 Socket 通訊、Emitter/Receiver、檔案/資料庫存取、ROS/ROS2 整合、Web API 等，每種方式各有其適用場景與優點。這種設計讓 Webots 能靈活應用於各種機器人模擬與協作場景。 \n \n \n \n \n \n \n \n \n Webots 的模擬世界中燈光和陰影設定如何影響感測器或相機的數據？A:\n Webots 中的燈光與陰影設定透過物理模型直接影響感測器數據： \n \n \n 光感測器 ：輻照度計算包含直接/環境光分量，受遮蔽、衰減、濾鏡調控。 \n \n \n 攝影機 ：光照強度決定影像亮度，陰影對比與動態模糊影響影像品質。 合理配置光源參數與感測器設定，可平衡模擬真實性與運算效能。 \n \n \n \n 如何在 Webots 中調整機器人或感測器的物理參數（如質量、摩擦係數）？A: Webots 可透過場景樹或 Supervisor 控制器，靈活調整機器人與感測器的物理參數，實現更真實或實驗性的模擬效果 。 \n 請說明如何使用 Webots 的 Console 與 Debug 工具協助程式錯誤排除。A: Webots 的 Console 與 Debug 工具可協助開發者快速定位程式錯誤，無論是語法錯誤、執行異常或資料流問題，都能透過 Console 輸出、gdb 除錯或 ROS 工具進行有效排除 。 \n Tutorial1、2 裡的機器人遇到物體時，碰撞偵測機制如何運作？A: Webots 的碰撞偵測機制基於\xa0 boundingObject \xa0與 ODE 物理引擎，自動偵測所有碰撞並模擬真實物理反應。開發者可透過場景樹設定碰撞體，並在必要時以 Supervisor API 進行進階碰撞事件監控與處理 。 \n 若要將 Webots 模擬結果導出並進行數據分析，你會選擇哪些方法與工具？A:\n \n \n \n 方法/工具 \n 適用場景 \n 優點 \n \n \n \n \n CSV/JSON 檔案 \n 簡單數據記錄、離線分析 \n 易於導入、跨平台 \n \n \n ROS Topic/rosbag \n ROS 整合、即時數據記錄與回放 \n 標準化、支援多節點 \n \n \n Web Scene \n 3D 互動展示、線上分享 \n 視覺化、易於分享 \n \n \n Python 生態系 \n 數據分析、繪圖、機器學習 \n 靈活、資源豐富 \n \n \n MATLAB/R \n 專業數學運算、統計分析 \n 功能強大、適合研究 \n \n \n 雲端平台 \n 大規模數據分析、協作 \n 可擴展、支援分散式運算 \n \n \n \n \n \n', 'tags': '', 'url': 'HW1.html'}, {'title': 'HW2', 'text': 'HW2 (5%):  建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景 \n 檔案: /downloads/41223114_EXAM2.zip \n \n \n \n \n \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW2 - 學員學號 \n \n 這部影片是在webots上嘗試模擬HW2。 \n Tutorial3：地面顏色感測與行為控制  主要學習目標：學習利用 ground sensor 偵測地面顏色，並根據顏色改變機器人行為。 \n 偵測方式：使用安裝於機器人底部的 ground sensor 讀取反射光強度。 \n 感測器作用：辨識地面顏色（如黑、白、灰），用於巡線或標記辨識。 \n 程式操作：啟用感測器並讀取數值，根據數值判斷顏色。 \n 行為改變：遇黑線時停下或轉向，遇白色繼續前進。 \n 校正原因：環境光線與地面材質影響感測器數值，校正提升準確度。 \n sampling period 設定：啟用感測器時指定取樣週期。 \n 判斷錯誤原因：感測器未校正、光線變化、材質反光異常、門檻設定不當。 \n Tutorial4：距離感測與避障行為  核心任務：利用距離感測器偵測障礙物，實作自動避障。 \n 偵測方式：e-puck 配備多個紅外線距離感測器，取得周圍障礙物距離。 \n DistanceSensor 運作：回傳與障礙物距離成比例的數值（0~4096）。 \n 程式操作：取得感測器裝置，啟用並讀取數值。    數值單位與轉換：數值為比例值，需校正轉換為實際距離。 \n sampling period 設定：啟用時設定取樣週期（毫秒）。 \n 避障行為實作：根據感測器數值判斷障礙物方向，調整轉向。 \n 雙側障礙物處理：後退並隨機轉向避免死角。 \n 多感測器考量：提供完整環境資訊，提升避障精確度。 \n 故障排除：檢查感測器啟用、校正門檻、演算法優化、馬達控制。 \n Tutorial5：多感測器整合與複雜任務  主題：結合多種感測器，實作複雜任務與有限狀態機（FSM）。 \n 多感測器反應：根據地面顏色與障礙物狀態調整行為。 \n 感測器融合：同時讀取多感測器數值，設計 FSM 進行狀態切換。 \n 巡線與避障結合：巡線為主，遇障礙物暫停巡線避障。 \n 衝突訊息決策：設定感測器優先權或依狀態機切換行為。 \n 任務流程切換：以 FSM 控制狀態與行為。 \n FSM 設計：定義狀態，根據感測器輸入切換。 \n 挑戰題目：如同時巡線避障，先分別實作再整合。 \n 自主巡邏功能：路徑規劃、位置記錄、感測器融合、狀態控制。 \n 感測器資料融合（Sensor Fusion） \n 將多種感測器數據整合，提升環境感知與決策能力。 \n 應用於巡線避障、複雜任務狀態切換 \n', 'tags': '', 'url': 'HW2.html'}, {'title': 'HW3', 'text': 'HW3\xa0(20%):建立 Webots 桌上籃球遊戲機模擬系統 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW3 - 學員學號 \n 檔案:我沒做出來，真是抱歉。 \n \n 我終於裝起來了: \n \n 在webots組裝，但不知為何其位置很怪?? \n \n 如果完成了，應該是像這樣: \n \n Tutorial6 相關提問 \n 主要學習主題? \n Tutorial6 主要學習如何在 Webots 中為 e-puck 機器人新增攝影機（Camera）裝置，並透過程式控制攝影機，取得影像資料，進而讓機器人能依據視覺資訊做出反應。 \n e-puck 機器人新增裝置? \n 在本單元，e-puck 機器人新增了攝影機（Camera）裝置。 \n 如何在 Webots 中使用攝影機（Camera）? \n 需在機器人結構中加入 Camera 節點，設定好名稱、位置與方向。然後在控制器程式中取得 Camera 物件並啟用。 \n Camera 需要在程式中如何啟用? \n 需呼叫 camera->enable(TIME_STEP)（C++）或 wb_camera_enable(camera, TIME_STEP)（C）來啟用攝影機，TIME_STEP 是模擬步進時間。 \n 如何取得攝影機擷取到的影像資料? \n 啟用攝影機後，可用 camera->getImage()（C++）或 wb_camera_get_image(camera)（C）取得影像資料。 \n 機器人如何依據攝影機影像做出反應? \n 可根據影像中的顏色、形狀等資訊進行分析，然後調整機器人行為（如移動方向、速度等）。 \n Camera 裝置可以調整哪些參數? \n 可調整解析度（寬、高）、視場角（FOV）、更新頻率等。 \n 影像解析度的設定會對模擬有什麼影響? \n 解析度越高，影像越清晰，但會增加運算負擔，降低模擬效率。 \n 如何將攝影機影像儲存成圖片檔? \n 可將取得的影像資料存成圖片檔（如 PNG），需用程式將影像 buffer 轉存為檔案，通常會用到額外的影像處理函式庫。 \n 若攝影機影像顯示異常，可能的原因? \n 常見原因有：Camera 節點未正確加入、名稱不符、未啟用、解析度設置錯誤、Webots 需重啟等。 \n Tutorial7 相關提問 \n 核心任務? \n 讓 e-puck 機器人利用攝影機偵測並辨識顏色，進而做出相應行為。 \n e-puck 機器人如何偵測顏色? \n 透過攝影機擷取影像後，分析影像像素的顏色資訊。 \n 如何分析攝影機擷取的影像來辨識特定顏色 \n 可逐像素分析 RGB 或 HSV 值，判斷是否落在目標顏色範圍內。 \n OpenCV 或其他影像處理函式庫的應用方式? \n 將 Webots 取得的影像資料轉為 OpenCV 可處理的格式（如 Mat），然後用 OpenCV 函式進行顏色過濾、區域偵測等。 \n 如何將影像中的顏色資訊轉換為機器人行為? \n 分析影像中目標顏色的位置，決定機器人移動方向或速度，實現追蹤等行為。 \n 若要辨識多種顏色，程式需考慮哪些步驟? \n 需為每種顏色設置對應的閾值範圍，分別進行偵測，並根據偵測結果決定行為優先順序。 \n 如何解決不同光源下顏色偵測的不穩定問題? \n 可將影像轉換為 HSV 色彩空間，並動態調整閾值，或進行自動白平衡、亮度校正等。 \n e-puck 機器人如何追蹤影像中的顏色物件? \n 偵測到目標顏色後，計算其在影像中的位置，調整機器人行進方向，使目標保持在中央。 \n 若影像中有多個同色物件，程式如何選擇追蹤目標? \n 可選擇面積最大、最靠近中央或最近的物件作為追蹤目標。 \n Tutorial7 能否應用於現實世界的機器人？需做哪些調整？ \n 可應用於現實機器人，但需考慮真實攝影機的雜訊、光源變化、鏡頭畸變等，並進行相應的校正與調整。 \n Tutorial8 相關提問 \n 主要學習目標? \n 學習 Supervisor 控制器的使用，實現對多個機器人或物件的監控與管理。 \n 什麼是 Supervisor？在 Tutorial8 扮演什麼角色？ \n Supervisor 是一種特殊的控制器，可取得並控制場景中所有物件，負責監督與管理模擬過程。 \n Supervisor 可以進行哪些操作？ \n 可取得物件狀態、控制物件位置、重設模擬、紀錄數據等。 \n 如何在 Supervisor 控制器中存取並控制其他機器人？ \n 可透過 API 取得機器人節點，然後讀取或改寫其屬性（如位置、狀態）。 \n 如何用 Supervisor 監測機器人是否達到目標區域？ \n 可定期取得機器人座標，判斷是否進入目標區域範圍。 \n Supervisor 如何重設模擬或重置機器人位置？ \n 可呼叫 Supervisor 的重設函式，或直接設定機器人座標來重置位置。 \n Supervisor 能否獲取所有物件的座標與狀態？如何實作？ \n 可以，透過遍歷場景樹節點，取得各物件座標與狀態。 \n 如何紀錄機器人模擬過程的數據供日後分析？ \n Supervisor 可將模擬過程中的關鍵數據（如座標、狀態等）寫入檔案做紀錄。 \n Supervisor 可以如何協助自動化測試機器人行為？ \n 可自動控制模擬流程、重複測試不同情境，並自動收集結果數據。 \n', 'tags': '', 'url': 'HW3.html'}, {'title': 'Midterm', 'text': '本課程所繳交的期中成績為學員自評之學習期望成績. \n 期中考週的自評期望成績繳交流程: \n \n 整理先前所完成的各週的進度、作業網頁內容以及心得 \n 拍攝期中自評影片, 上傳至 Youtube 後, 以" 國立虎尾科技大學 - 機械設計工程系 - cd2025 期中自評- 學員學號 "為影片標題後嵌入本頁面中 \n 回填期中自評表單 \n 上傳學員期中成績 \n \n 各週進度: \n 1.W1:可攜環境更新 \n 2.W2、W3:完成本組學員列表 \n 3.W4:IPV6網際網路設定 \n 4.W5:開啟webots並練習基礎操作 \n 5.W6:完成HW2及task3 \n 6.W8:在webots中開啟四連桿機構檔案 \n 各週網頁內容: \n 如下列圖片、連結所示(目前共21個commit) \n https://github.com/mdecd2025/hw-kim41223114 \n \n 期中心得: \n 雖然在webots的應用上還不是那麼的如魚得水，只會基本的開啟project與加入shape，但在solvespace上繪製是沒問題的，在上了這門課之後，使我學習到很我沒見過的模擬軟體，之後對我在學習上必定很有幫助，不過我在webots和IPV6這兩個方面還需要多多練習，希望我在期末會有更加出色的表現。 \n 期中自評影片: \n 其實這部影片內容不多，只是拍攝我的作業網站而已，主要就是展現自己平時的成果: \n \n \n', 'tags': '', 'url': 'Midterm.html'}, {'title': 'Exam', 'text': 'Exam1 (10%): 建立 Webots 基本物件模擬場景 \n 各學員利用 Webots R2025a 套件中的 Shape 物件, 隨堂建立指定的機電系統模擬場景, 並利用 Python 程式進行互動控制. \n Exam2 (10%): 利用 CAD 零組件建立模擬場景\xa0 \n 各學員利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制. \n Exam3 (20%): Webots 機電模擬場景的協同設計 \n 各分組利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制. 過程中各學員必須採同步協同模式, 維護從 Github Classroom 取得的分組協同倉儲以及網站. \n 協同分組方式: \n \n 分配學員負責利用 Solvespace 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁. \n 分配學員負責利用 NX2312 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁. \n 分配學員負責利用 Webots 建立機電系統模擬場景, 並利用 Python 程式進行控制, 過程中必須將建構過程拍成帶有說明字幕的影片上傳至分組網頁. \n \n', 'tags': '', 'url': 'Exam.html'}, {'title': 'Exam1', 'text': 'Exam1 (10%): 建立 Webots 基本物件模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam1 - 學員學號 \n 檔案: /downloads/fourbar_box_exam1-41223114.7z \n \n \n 流程: \n \xa0 \xa0 1.使用CAD軟體繪製零件 \n \xa0 \xa0 \xa0 (1)繪製草圖 \n \xa0 \xa0 \xa0 (2)依序繪製各個零件 \n \xa0 \xa0 \xa0 (3)將各個零件轉為obj檔案 \n \xa0 \xa0 2.使用webots導入零件做動態模擬 \n \xa0 \xa0 \xa0 (1)建立robot用以製作結構 \n \xa0 \xa0 \xa0 (2)使用上者的chidren來建立各個box及hengjoint來製作結構 \n \xa0 \xa0 \xa0 (3)記得導入physic \n \n mde.tw Exam1 相關提問簡短回答 Webots 場景基本節點功能 1. WorldInfo 節點有何作用？ WorldInfo 節點定義模擬世界的全域屬性，包括重力設定、基本時間步長(basicTimeStep)、座標系統等物理參數，是每個 Webots 世界檔案(.wbt)的必要節點。 \n 2. Viewpoint 節點的主要功能是什麼？ Viewpoint 節點定義 3D 視窗中觀察者的位置、朝向和視角，讓使用者可以從不同角度觀察模擬場景，可設定 position、orientation 和 fieldOfView 等屬性。 \n 3. TexturedBackground 與 TexturedBackgroundLight 在場景中負責什麼？ TexturedBackground：設定場景的背景環境，提供天空盒或背景圖像 \n TexturedBackgroundLight：配合背景提供環境光照，確保場景有適當的光線照明效果 \n 4. Robot 節點在此場景中代表什麼角色？ Robot 節點是機器人的根節點，可包含控制器程式、感測器、執行器等子節點，代表一個完整的機器人系統，具備自主行為能力。 \n 5. base Solid 節點的功能為何？ base Solid 節點作為四連桿機構的固定基座，提供其他連桿的參考座標系統，通常使用 DEF 命名以便其他節點引用。 \n 物件外觀與幾何設定 6. Shape 與 Appearance 節點如何用於物件外觀設定？ Shape：定義物件的視覺幾何形狀，包含 geometry 和 appearance 欄位 \n Appearance：設定材質屬性，如顏色、透明度、金屬質感等視覺效果 \n 7. geometry Box 如何設定形狀尺寸？ 在 Box 節點中使用 size 欄位設定三維尺寸，格式為 [長度, 寬度, 高度]，單位為公尺。 \n 8. material Material 內的 diffuseColor 如何影響外觀？ diffuseColor 設定物件的基本顏色，使用 RGB 值表示，如 [1, 0, 0] 為紅色，[0, 1, 0] 為綠色。 \n 9. transparency 參數設定對外觀有何影響？ transparency 值介於 0-1 之間，0 為完全不透明，1 為完全透明。base 通常設為透明以便觀察內部機構運動。 \n 關節與運動控制 10. HingeJoint 節點的用途與基本參數有哪些？ HingeJoint 實現旋轉關節功能，基本參數包括： \n anchor：旋轉中心點座標 \n axis：旋轉軸方向 \n device：可配置馬達或感測器 \n 11. HingeJointParameters 節點中的 axis 與 anchor 分別代表什麼？ axis：定義旋轉軸的方向向量，如 [0, 1, 0] 表示繞 Y 軸旋轉 \n anchor：設定旋轉的中心點座標位置 \n 12. RotationalMotor 裝置如何與 HingeJoint 結合？ 在 HingeJoint 的 device 欄位中加入 RotationalMotor，可透過控制器程式設定旋轉速度或位置，實現自動化運動控制。 \n 13. 若要讓 link3 可動，需在何處設定馬達？ 需在連接 link3 的 HingeJoint 節點中的 device 欄位加入 RotationalMotor，並在控制器程式中設定適當的運動參數。 \n 物理屬性與碰撞檢測 14. Solid 節點與 boundingObject 的關係為何？ boundingObject 定義 Solid 節點的碰撞檢測範圍，通常使用與視覺外形相同或簡化的幾何形狀，與 physics 節點配合使用。 \n 15. physics Physics 節點的功能？ Physics 節點定義物件的物理屬性，如質量、摩擦係數等，使物件能參與物理模擬，包括重力、碰撞等效果。 \n 16. 何謂 boundingObject？為何要指定？ boundingObject 是物件的碰撞檢測邊界，用於物理引擎計算碰撞。必須指定以實現正確的物理互動和碰撞檢測。 \n 座標與定位 17. translation 與 rotation 如何決定物件在 3D 空間的位置與朝向？ translation：設定物件在 3D 空間的位置座標 [x, y, z] \n rotation：設定物件的旋轉，格式為 [軸向量 x, y, z, 角度] \n 18. Pose 節點的功能與使用時機？ Pose 節點用於在 children 數列中進行局部座標轉換，當需要調整子節點相對於父節點的位置和朝向時使用。 \n 19. anchor 參數如何影響關節的運動中心？ anchor 參數設定關節的旋轉中心點，影響連桿繞此點旋轉的運動軌跡，必須根據機構設計正確設定。 \n 結構設計與命名 20. link1、link2、link3 各自代表什麼結構？ 在四連桿機構中： \n link1：第一個可動連桿，連接 base 和 link2 \n link2：第二個可動連桿，連接 link1 和 link3 \n link3：第三個可動連桿，形成封閉運動鏈 \n 21. Robot 節點中 children 陣列的作用？ children 陣列用於包含機器人的所有子節點，如感測器、執行器、結構件等，建立完整的機器人模型階層結構。 \n 22. DEF 與 USE 的差異與用途？ DEF：定義一個可重複使用的節點，並給予名稱 \n USE：引用先前 DEF 定義的節點，避免重複定義，節省記憶體 \n 23. SolidReference 如何實現多關節結構的連結？ SolidReference 通過 solidName 欄位引用其他 Solid 節點，實現封閉運動鏈的約束，完成四連桿機構的閉合。 \n 24. endPoint 屬性在 HingeJoint 結構中的意義？ endPoint 定義關節末端連接的物件，建立關節與下一個連桿的連接關係，形成運動鏈。 \n 控制程式與運動檢查 25. controller 屬性如何指定機器人控制程式？ 在 Robot 節點的 controller 欄位中指定控制器名稱，對應 controllers 目錄下的程式檔案，如 "fourbar_controller"。 \n 26. 如何在 Webots 檢查各關節的運動範圍？ 可在場景樹中查看 HingeJoint 的 minPosition 和 maxPosition 參數，或在模擬運行時觀察關節的實際運動情況。 \n 設計考量與規則 27. 為什麼 link2 會包含 Pose 及多個子 Shape？ link2 可能需要複雜的幾何結構或特定的定位方式，使用 Pose 進行座標轉換，多個 Shape 建立詳細的視覺外形。 \n 28. 四連桿結構在此場景的設計意圖為何？ 展示封閉運動鏈的機構模擬，讓學員理解如何在 Webots 中建立複雜的機械結構，並學習關節約束和運動控制。 \n 29. 場景中透明的 base 有什麼作用？ 透明 base 可讓觀察者清楚看到機構內部的運動情況，便於理解機構的運動原理和檢查設計是否正確。 \n 30. 製作此場景時，應注意哪些結構層級與命名規則？ 使用有意義的 DEF 名稱（如 base, link1, joint1） \n', 'tags': '', 'url': 'Exam1.html'}, {'title': 'Exam2', 'text': 'Exam2 (10%): 利用 CAD 零組件建立模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam2 - 學員學號 \n 檔案: /downloads/fourbar_slvs_exam2.zip \n \n \n 第二部影片是修改link2的過程 \n \n 第三部則是記錄模擬的過程，solvespace的單位不對，需要重新畫圖，明天再畫吧，現在都晚上十點了。 \n 更新: 我終於做出來了，雖然過程有同學教導，也有利用檔案做修改，但總算做出應有的檔案。 \n \n 流程: \n \xa0 \xa0 1.使用CAD軟體繪製零件 \n \xa0 \xa0 \xa0 (1)繪製草圖 \n \xa0 \xa0 \xa0 (2)依序繪製各個零件 \n \xa0 \xa0 \xa0 (3)將各個零件轉為obj檔案 \n \xa0 \xa0 2.使用webots導入零件做動態模擬 \n \xa0 \xa0 \xa0 (1)建立robot用以製作結構 \n \xa0 \xa0 \xa0 (2)使用上者的chidren來建立各個box及hengjoint來製作結構 \n \xa0 \xa0 \xa0 (3)記得導入physic \n \n mde.tw Exam2 相關提問詳細回答整理 場景基礎節點設定 1. WorldInfo 節點的作用為何？ WorldInfo 節點是 Webots 模擬世界的核心配置節點，定義模擬環境的基本物理參數，如重力、基本時間步長、物理引擎設定等。它確保整個模擬環境的物理行為一致性。 \n 2. Viewpoint 節點設計時需考慮哪些參數？ 主要參數包括： \n position：觀察點的 3D 位置座標 \n orientation：觀察角度與朝向（四元數表示） \n fieldOfView：視野角度範圍 \n near/far：近遠平面剪裁距離 \n 3. TexturedBackground 與 TexturedBackgroundLight 在場景中的功能？ TexturedBackground：提供場景的背景環境，通常為天空盒或環境貼圖 \n TexturedBackgroundLight：與背景搭配的環境光源，確保場景有適當的整體照明 \n 4. 為什麼需要使用 EXTERNPROTO 來引用背景相關的 PROTO？ 從 Webots R2022b 開始，必須使用 EXTERNPROTO 聲明依賴關係，確保 PROTO 版本相容性和模組化管理。這可避免檔案遺失或版本衝突問題。 \n CAD 零組件導入相關 5. 場景中為何有兩個 BASE（BASE 與 BASE2）？ 在四連桿機構中，BASE 作為固定基座，BASE2 可能是另一個固定點或用於封閉運動鏈的約束點。多個 BASE 有助於建立複雜機構的多重約束關係。 \n 6. CadShape 節點如何使用，其作用與限制為何？ 使用方式： \n text CadShape {  url ["../split_parts/base.obj"] } 作用： \n 渲染來自外部 CAD 檔案的 3D 模型（支援 .dae 或 .obj 格式） \n 可包含材質與紋理資訊 \n 限制： \n 僅用於視覺顯示，無法用於碰撞檢測 \n 需搭配外部 .mtl 檔案來修改材質顏色 \n 7. Mesh 作為 boundingObject 有什麼效果？ Mesh 節點可同時用於視覺顯示和碰撞檢測。當作為 boundingObject 使用時，提供精確的幾何碰撞檢測，但計算複雜度較高，適合需要精確物理互動的場景。 \n 8. 資料夾路徑 "../split_parts/" 的用途為何？ 此路徑指向存放分解後 CAD 零組件的目錄，通常包含從 CAD 軟體（如 Solvespace 或 Siemens NX）匯出的個別零件檔案（如 .obj 格式），方便 Webots 分別載入各零組件。 \n 機器人結構與控制 9. Robot 節點的結構和功能？ Robot 節點是機器人系統的根節點，包含： \n children 陣列：容納所有子節點（Solid、Shape、感測器、執行器等） \n controller 屬性：指定控制程式 \n name 屬性：機器人識別名稱 \n 提供機器人的基本功能介面 \n 10. HingeJoint 節點在本結構中如何應用？ HingeJoint 實現旋轉關節功能，在四連桿機構中： \n JOINT1~JOINT4 分別連接各連桿 \n 提供單軸旋轉約束 \n 可搭配 RotationalMotor 實現動力驅動 \n 11. HingeJointParameters 的 axis 與 anchor 參數說明？ axis：旋轉軸的方向向量（如 [0 0 1] 表示 Z 軸） \n anchor：旋轉中心點的座標位置，決定關節的旋轉中心 \n 12. RotationalMotor 的功能是什麼，如何與關節對應？ RotationalMotor 提供旋轉動力，透過設定 velocity 控制旋轉速度。通常置於 HingeJoint 的 motor 欄位中，實現自動化運動控制。 \n 結構設計與約束 13. SolidReference 的用途與設計意義？ SolidReference 用於建立封閉運動鏈約束，透過 solidName 屬性引用已存在的 Solid 節點，形成機構的閉合約束條件。這對四連桿等封閉機構至關重要。 \n 14. 為什麼每個連桿（link）都需要 physics 與 boundingObject？ physics：定義物理屬性（質量、慣性等），確保正確的動力學模擬 \n boundingObject：定義碰撞檢測範圍，確保物理互動的準確性 \n 15. name 屬性在 Solid 與 Robot 節點中的差異？ Robot 節點的 name：用於控制器識別和多機器人場景中的區分 \n Solid 節點的 name：主要用於場景樹中的物件識別和 SolidReference 引用 \n 16. JOINT1~JOINT4 分別對應機構的哪個部位？ 在四連桿機構中： \n JOINT1：BASE 與 LINK1 的連接點 \n JOINT2：LINK1 與 LINK2 的連接點 \n JOINT3：LINK2 與 LINK3 的連接點 \n JOINT4：LINK3 與 BASE 的封閉約束點 \n 座標系統與定位 17. anchor 參數對機構運動的實際影響？ anchor 決定關節的旋轉中心，直接影響： \n 連桿的運動軌跡 \n 機構的運動範圍 \n 各關節間的相對位置關係 \n 18. DEF 與 USE 的差異與用途？ DEF：定義可重複使用的節點，賦予名稱 \n USE：引用已定義的 DEF 節點，避免重複定義並節省記憶體 \n 19. 場景中 LINK1、LINK2、LINK3 的結構意義？ 代表四連桿機構中的三個可動連桿： \n LINK1：第一連桿，連接 BASE 和 LINK2 \n LINK2：第二連桿，連接 LINK1 和 LINK3 \n LINK3：第三連桿，完成與 BASE 的封閉約束 \n CAD 整合與檔案管理 20. 為何要將外部 CAD 檔案（obj）導入 Webots？ 獲得精確的幾何外形 \n 保持與 CAD 設計的一致性 \n 實現視覺化與物理模擬的整合 \n 支援複雜幾何形狀的模擬 \n 21. 如何在 Webots 中檢查導入 CAD 物件的碰撞情形？ 透過 View 選單啟用碰撞檢測顯示 \n 觀察 boundingObject 的幾何範圍 \n 使用 Physics 節點的碰撞回饋功能 \n 在控制器中監控碰撞事件 \n 22. controller 屬性如何讓機器人執行指定程式？ controller 屬性指定控制器程式的名稱，Webots 會： \n 在 controllers 目錄中尋找對應的程式檔案 \n 啟動該程式作為獨立進程 \n 建立通訊管道進行資料交換 \n 運動控制與參數調整 23. 如果要更改關節旋轉範圍，該修改哪些參數？ 主要修改 HingeJointParameters 中的： \n minStop：最小旋轉角度 \n maxStop：最大旋轉角度 \n stopBounce：碰撞反彈係數 \n stopERP：誤差修正參數 \n 24. 如何確保多個 link 結構組裝時不產生重疊？ 正確設定各 link 的 translation 和 rotation \n 確保 anchor 點位置準確 \n 檢查 boundingObject 的幾何範圍 \n 使用 CAD 軟體進行裝配驗證 \n 25. 若要讓 LINK3 可由 JOINT3 控制，需注意哪些設定？ JOINT3 必須包含 RotationalMotor \n 確保 LINK3 正確連接到 JOINT3 的 endPoint \n 設定適當的 motor 參數（maxVelocity、maxTorque） \n 在控制器中正確引用 motor 設備 \n 檔案結構與規範 26. 機構結構層級在 VRML/WBT 檔案中的重要性？ 樹狀結構決定了： \n 座標變換的繼承關係 \n 物理約束的作用範圍 \n 控制指令的傳遞路徑 \n 場景的邏輯組織 \n 27. 若 CAD 檔案位置錯誤或缺失，Webots 會怎麼處理？ 在 Console 顯示錯誤訊息 \n 以預設幾何體（如 Box）替代 \n 模擬可能無法正常啟動 \n 需要修正檔案路徑或補充缺失檔案 \n 28. 如何於場景內為各零件添加材質或調整外觀？ 使用 Shape-Mesh 節點： \n text Shape {  appearance Appearance {  material Material {  diffuseColor 1 0 0 # 紅色  }  }  geometry Mesh {  url ["../split_parts/link1.obj"]  } } 使用 CadShape 節點：需要外部 .mtl 檔案進行材質控制。 \n 29. Viewpoint 的 orientation 和 position 如何影響觀察？ position [x y z]：決定觀察點在 3D 空間中的位置 \n orientation [x y z angle]：決定觀察方向，影響場景的視角和透視效果 \n 30. 製作此一場景時，需注意哪些命名與結構規範？ 使用有意義的 DEF 名稱（如 BASE、LINK1 等） \n 保持一致的命名慣例 \n 確保檔案路徑的相對性和可攜性 \n 遵循 Webots 的節點層級結構 \n 建立清晰的控制器與設備對應關係 \n', 'tags': '', 'url': 'Exam2.html'}, {'title': 'Exam3', 'text': 'Exam3 (20%): Webots 機電模擬場景的協同設計 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3 - 學員學號 \n 檔案: /downloads/41223114-Exam3-1.7z \n \xa0 \xa0 以下是第一部分，用webots stream開啟HW1檔案: \n \n \n \n 以下是第三部分(我先做part3)，這個部分需要對客戶端、伺服端，都要做一定修改，否則程式是無法進行的，像是IPV6位置、輪胎轉向方向都要修改，除此之外，今天是114/6/10晚上九點半，摸了兩個鐘頭做出的結果，是part3第一次嘗試，不知為何無法接上瀏覽器，下次再嘗試客戶端接上瀏覽器。 \n 檔案: /downloads/youbot_cart_w10_websocket.7z \n 以下是第二部分，第一部影片幾乎製作完成了，我們今天使用IPV4做出來(因今天IPV6沒有開啟，無法使用)，第一部影片沒能將其用瀏覽器觀看，第二步則是將成功使用瀏覽器的畫面補回來，明明兩部影片都沒更改東西，第一部卻無法用瀏覽器觀看，有夠奇怪的。 \n 檔案: /downloads/41223114-Exam3-2-w17.7z \n \n \n 本文件針對 mde.tw cd2025 協同產品設計實習課程中 Exam3「Webots 機電模擬場景的協同設計」的相關問題進行詳細回答。 \n ## 第一部分：Webots 串流系統基礎 \n ### 1. 如何利用 webotsw --stream 啟動 Webots 模擬系統？ 在可攜程式系統的命令列中輸入 `webotsw --stream` 即可同時啟動 Webots 和串流伺服器。預設會在埠號 1234 提供串流服務，允許其他用戶透過瀏覽器觀看模擬畫面。 \n ### 2. 為何要使用個人 IPv6 網址來啟動 Webots 伺服器？ IPv6 提供更大的位址空間，避免 IPv4 位址衝突問題。在課程中，每位學員分配固定的 IPv6 位址（如 2001:288:6004:17:fff1:cc25:0000:a001），對應符號名稱如 w1.mde.nfu.edu.tw，便於協同操作和遠端存取。 \n ### 3. 客戶端如何透過瀏覽器檢視啟動串流的 Webots 模擬？ 開啟瀏覽器，連接到 `http://[IPv6位址]:1234` 或使用符號名稱如 `http://w1.mde.nfu.edu.tw:1234`，即可觀看即時的 Webots 模擬畫面。 \n ### 4. 若要讓協同組員能觀看你的模擬，需注意哪些網路設定？ - 確保防火牆開放 1234 埠號 - IPv6 網路設定正確 - 模擬主機與觀看者都支援 IPv6 連線 - 檢查路由器是否允許 IPv6 流量通過 \n ## 第二部分：七段顯示器設計與控制 \n ### 5. 七段顯示器（三位數 counter）場景是如何設計其顯示結構的？ 七段顯示器由七個區段（segments）組成，標記為 a-g，每個區段使用獨立的 Mesh 幾何體，透過修改 Material 的 diffuseColor 來控制亮滅狀態。三位數 counter 包含三組完整的七段顯示器。 \n ### 6. 如何將學號（八位數）分割顯示在多個三位數七段顯示器上？ 八位數學號可分為：第一組顯示前三位，第二組顯示中間三位，第三組顯示最後兩位。程式中使用除法和餘數運算進行數字分離： ```python digit1 = student_id // 100000 digit2 = (student_id // 100) % 1000 digit3 = student_id % 100 ``` \n ### 7. Webots 場景檔案中 EXTERNPROTO 的作用是什麼？ EXTERNPROTO 用於引用外部 PROTO 檔案，確保場景檔案的模組化管理。從 Webots R2022b 開始，必須明確聲明所有外部 PROTO 依賴關係，避免檔案遺失或版本衝突。 \n ### 8. RectangleArena 在場景中扮演什麼角色？ RectangleArena 提供標準化的競技場環境，包含地板、圍牆等基本元素，作為機器人模擬的基礎場景。 \n ### 9. DEF 與 USE 在 Webots 場景設計中的用途？ DEF 定義可重複使用的節點，USE 引用已定義的節點。在七段顯示器中，可以 DEF 定義一個區段，然後用 USE 創建多個相同的區段，節省記憶體並便於維護。 \n ### 10. Mesh 幾何如何用於七段顯示器的設計？ 每個七段顯示器的區段使用 Mesh 節點載入對應的 3D 模型檔案（如 .obj 格式），透過 Material 節點的 diffuseColor 屬性控制顏色，實現亮滅效果。 \n ## 第三部分：控制器程式設計 \n ### 11. 如何於 Webots 控制器中動態改變顯示數字？ 透過 Supervisor 控制器存取場景樹中的 Material 節點，修改其 diffuseColor 屬性： ```python mat_node = supervisor.getFromDef(\'a1mat\') mat_node.getField(\'diffuseColor\').setSFColor([0, 1, 0]) # 綠色亮起 ``` \n ### 12. supervisor 屬性設為 TRUE 有何意義？ 將 Robot 節點的 supervisor 屬性設為 TRUE，賦予控制器存取整個場景樹的權限，可以讀取和修改其他物件的屬性，實現更高層次的模擬控制。 \n ### 13. 如何安裝並執行 Webots websocket server 端的 Python 程式？ 安裝必要的 Python 模組（如 websockets、asyncio），編寫 WebSocket 伺服器程式監聽指定埠號，接收來自客戶端的控制指令並轉發給 Webots 控制器。 \n ### 14. Webots 機器人控制程式如何與 Websocket server 整合？ 控制器程式建立與 WebSocket 伺服器的連線，接收 JSON 格式的控制指令，解析後執行對應的機器人動作（如馬達控制、顯示器更新等）。 \n ### 15. Websocket server 端需如何正確設定 IPv6 地址與 port？ 在 Python WebSocket 伺服器中指定 IPv6 位址： ```python server = await websockets.serve(handler, "2001:288:6004:17:fff1:cc25:0000:a001", 8765) ``` \n ## 第四部分：KUKA YouBot 控制 \n ### 16. Websocket client 端如何發送控制指令給 KUKA YouBot 平台車？ 客戶端發送 JSON 格式指令到 WebSocket 伺服器： ```json {"action": "move", "direction": "forward", "speed": 1.0} ``` \n ### 17. server 端如何解析接收到的 JSON 指令？ 使用 Python 的 json 模組解析： ```python import json data = json.loads(message) action = data.get(\'action\') ``` \n ### 18. YouBot 四輪的馬達名稱在控制程式中如何對應？ YouBot 四輪通常命名為： - \'wheel1motor\'（前左） - \'wheel2motor\'（前右） - \'wheel3motor\'（後左） - \'wheel4motor\'（後右） \n ### 19. set_wheel_velocity 函數作用為何？ 設定 YouBot 四輪的速度，實現不同的運動模式（前進、後退、轉彎、橫向移動）： ```python def set_wheel_velocity(fl, fr, bl, br):  wheel1motor.setVelocity(fl)  wheel2motor.setVelocity(fr)  wheel3motor.setVelocity(bl)  wheel4motor.setVelocity(br) ``` \n ### 20. 如何利用鍵盤直接在串流伺服器電腦上控制 YouBot 平台車的移動？ 在控制器中監聽鍵盤事件，根據按鍵設定對應的輪速： ```python keyboard = robot.getKeyboard() keyboard.enable(TIME_STEP) key = keyboard.getKey() if key == ord(\'W\'):  set_wheel_velocity(1, 1, 1, 1) # 前進 ``` \n ## 第五部分：協同操作進階功能 \n ### 21. Webots websocket 架構如何支援多人協同操作？ WebSocket 伺服器維護多個客戶端連線，使用執行緒或異步處理多個請求，將指令排隊處理，避免衝突並確保公平性。 \n ### 22. 若要讓 Webots client 可跨平台遠端控制，需注意什麼？ - 確保 IPv6 連線穩定 - 使用標準化的通訊協定（如 WebSocket） - 處理不同平台的網路差異 - 實現斷線重連機制 \n ### 23. 七段顯示器中的每個 segment 如何以程式切換其亮度？ 透過修改 Material 的 diffuseColor 值，設定不同的顏色強度： ```python ON_COLOR = [0, 1, 0] # 亮綠色 OFF_COLOR = [0.05, 0.05, 0.05] # 暗灰色 ``` \n ### 24. 如何將學號依序顯示於七段顯示器上（八個位數）？ 建立數字到七段顯示器的對應表，逐位解析學號並設定對應的顯示器： ```python SEGMENTS = [  [1,1,1,1,1,1,0], # 0  [0,1,1,0,0,0,0], # 1  # ... 其他數字 ] ``` \n ## 第六部分：故障排除與效能優化 \n ### 25. 若模擬串流畫面在瀏覽器無法正常顯示，可能的原因以及解決辦法為何？ **可能原因：** - IPv6 連線問題 - 防火牆阻擋 - 瀏覽器不支援 IPv6 - 串流服務未正確啟動 \n **解決辦法：** - 檢查網路設定 - 開放必要埠號 - 使用支援 IPv6 的瀏覽器 - 重新啟動 Webots 串流服務 \n ### 26. Webots 場景中 Material 的 diffuseColor 如何設定顯示顏色？ diffuseColor 接受 RGB 值（0-1 範圍）： ``` diffuseColor [1, 0, 0] # 紅色 diffuseColor [0, 1, 0] # 綠色 diffuseColor [0, 0, 1] # 藍色 ``` \n ### 27. Webots 伺服器啟動後，如何讓其他組員的電腦以 https 協定成功連線？ 需要配置 SSL 憑證，啟動時使用 `--stream` 參數並指定 SSL 選項： ``` webotsw --stream="ssl;cert=cert.pem;key=key.pem" ``` \n ### 28. 當 Websocket server 收到無效資料時，會如何處理？ 實現錯誤處理機制： ```python try:  data = json.loads(message) except json.JSONDecodeError:  print("Invalid JSON received")  return ``` \n ## 第七部分：文件管理與協作 \n ### 29. 若要錄製協同操作過程的影片，建議採用哪些工具？ - OBS Studio（免費） - Bandicam - Camtasia - Webots 內建錄影功能 \n ### 30. 完成所有操作後，如何整理並上傳操作影片與心得到作業網站？ 1. 整理影片檔案（MP4 格式） 2. 撰寫操作心得（Markdown 格式） 3. 上傳到個人 GitHub 倉儲 4. 更新作業網站連結 5. 填寫自評表單 \n ## 第八部分：技術細節與進階應用 \n ### 31-84. 其他進階問題的詳細回答 \n 由於篇幅限制，其餘問題的詳細回答包含： \n - **網路技術**：IPv6 與 IPv4 差異、連線穩定性、跨平台相容性 - **程式設計**：多執行緒處理、異常處理、資料同步 - **硬體整合**：感測器整合、馬達控制、碰撞偵測 - **系統架構**：負載均衡、擴展性設計、安全性考量 - **使用者介面**：多語系支援、即時回饋、錯誤提示 \n', 'tags': '', 'url': 'Exam3.html'}, {'title': 'Final', 'text': '期末協同專案執行過程影片、簡報與 PDf 報告檔案 (六人一組) (30%) \n 題目:  Webots 動態投籃模擬系統的協同設計 \n 說明:  \n 籃框架被配置在一定範圍內, 可隨機慢速前進、後退及左右擺動, 投籃機構系統帶有一定數量的籃球, 被配置在可自由移動的輪車上. \n 操作者可利用鍵盤特定按鍵控制投籃輪車的移動並發射投籃, 每投出一球後系統透過記分板進行計分, 並由送球機構進行補球或移動輪車取球, 遊戲可進行至全部數量籃球投完為止. \n 請將期末協同專案執行過程、內容與心得, 製作成影片，配合字幕上傳至 Youtube 後嵌入各階段的期末報告頁面中. \n 影片標題:  國立虎尾科技大學 - 機械設計工程系 - cd2025 期末報告 - 學員學號 - 各階段影片主題 \n', 'tags': '', 'url': 'Final.html'}, {'title': 'Brython', 'text': '1 add to 100 \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n \n \n', 'tags': '', 'url': 'Brython.html'}]};